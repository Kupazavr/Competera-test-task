1) Обработка url -> 5 пунктовый шаблон с загрузкой на сервер(была выбрана реализация через библиотеку forms с сохранением файлов на сервере из-за более быстрой скорости написания кода)->
-> 2 парсера для csv файлов, для отсекания возможно дублирующихся записей -> парсер xml со сбором в готовые  список из dict для более удобного взаимодействия -> SELECT, UPDATE, INSERT запросы с помощью queryset
2)Проверка на разницу между ценой и себестоимостью(В т.з не было указано что это и путем дедукции так-же не было выявленно ничего на это похожего. По этому мною был выбран вариант где delivery_cost 
означала не доставку конечному пользователю, а стоимость для  магазина, по этому вычислялась себестоимость по формуле (price - delivery_cost)) -> использование сырого sql запроса, т.к в тот момент знал как он будет выглядеть ->
-> Групировка для получения "Количества товаров, добавленных в каждую из категорий по дням" с помощью сырого запроса, обработка и Отправка данных по ftp на заранее полученый адресс из формы.

P.S не знаю для чего были данны такие колонки как цвет и акция, т.к не указано, что их надо добавлять в бд, но на всякий они все равно парсятся и хранятся во временных переменных
sqlite3 была использована из-за работы в нескольких местах, что усложняет использование нормальной базы
